name: Bump version
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    # checkout the code
      - name: Checkout code
        uses: actions/checkout@v4
      # create and set it to patch or minor or major depending on the commit message
      - name: get bump type
        id: bump
        run: |
          commit_message=$(git log -1 --pretty=%B)
          echo "Commit message: $commit_message"
          if [[ "$commit_message" =~ .*"\[patch\]".* ]]; then
            echo "bump=patch" >> $GITHUB_OUTPUT
          elif [[ "$commit_message" =~ .*"\[minor\]".* ]]; then
            echo "bump=minor" >> $GITHUB_OUTPUT
          elif [[ "$commit_message" =~ .*"\[major\]".* ]]; then
            echo "bump=major" >> $GITHUB_OUTPUT
          else
            echo "bump=patch" >> $GITHUB_OUTPUT
          fi
        shell: /usr/bin/bash -e {0}
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Upgrade pip & Install Poetry.
        run: |
          python -m pip install --upgrade pip
          pip install poetry
      - name: Install dependecies.
        run: |
          poetry install
        # create a variable with the old version
      - name: Get old version
        id: version
        run: |
          echo "old_version=$(poetry version -s)" >> $GITHUB_OUTPUT
      - name: Bump version
        run: |
          poetry run bumpver update --${{ steps.bump.outputs.bump }}
        # create a variable with the new version
      - name: Get new version
        id: version
        run: |
          echo "new_version=$(poetry version -s)" >> $GITHUB_OUTPUT
      - name: Commit & Push changes
        uses: actions-js/push@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          message: "Bump version from ${{ steps.version.outputs.old_version }} --> ${{ steps.version.outputs.new_version }}"

