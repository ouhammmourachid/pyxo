# name: Bump version
# on:
#   push:
#     branches:
#       - main

# permissions:
#   contents: write

# jobs:
#   build:
#     if: "!contains(github.event.head_commit.message, '#bump')"
#     runs-on: ubuntu-latest

#     steps:
#       - name: Check Commit Message
#         run: |
#           if [[ $(git log -1 --pretty=%B) == *"#bump"* ]]; then
#             echo "Commit contains #bump. Skipping workflow execution."
#             exit 78  # This exit code skips the workflow without failing
#           else
#             echo "Commit does not contain #bump. Proceeding with workflow execution."
#           fi
#         shell: /usr/bin/bash -e {0}

#       - name: Checkout code
#         uses: actions/checkout@v4
#         with:
#           token: ${{ secrets.PAT_TOKEN }}

#       - name: Get bump type
#         run: |
#           echo ${{ github.actor }}
#           commit_message=$(git log -1 --pretty=%B)
#           echo "Commit message: $commit_message"
#           if [[ "$commit_message" =~ .*"#patch".* ]]; then
#             echo "bump=patch" >> $GITHUB_ENV
#           elif [[ "$commit_message" =~ .*"#minor".* ]]; then
#             echo "bump=minor" >> $GITHUB_ENV
#           elif [[ "$commit_message" =~ .*"#major".* ]]; then
#             echo "bump=major" >> $GITHUB_ENV
#           else
#             echo "bump=patch" >> $GITHUB_ENV
#           fi
#         shell: /usr/bin/bash -e {0}

#       - name: Set up Python 3.8
#         uses: actions/setup-python@v2
#         with:
#           python-version: '3.10'

#       - name: Upgrade pip & Install Poetry.
#         run: |
#           python -m pip install --upgrade pip
#           pip install poetry

#       - name: Install dependencies.
#         run: |
#           poetry install

#       - name: Get old version
#         run: |
#           echo "old_version=$(poetry version -s)" >> $GITHUB_ENV

#       - name: Bump version
#         run: |
#           poetry run bumpver update --${{ env.bump }}

#       - name: Get new version
#         run: |
#           echo "new_version=$(poetry version -s)" >> $GITHUB_ENV

#       - name: Commit changes
#         run: |
#           git config --global user.email "actions@github.com"
#           git config --global user.name "GitHub Actions"
#           git add .
#           git commit -m "#bump version from ${{ env.old_version }} --> ${{ env.new_version }}"

#       - name: Push changes
#         run: |
#           git push https://github-actions[bot]:${{ secrets.PAT_TOKEN }}@github.com/ouhammmourachid/pyxo.git


name: Update File

on:
  workflow_dispatch:
  

jobs:
  build:
    # if: "!contains(github.event.head_commit.message, '#bump')"
    runs-on: ubuntu-latest

    steps:
      - name: Check Commit Message
        run: |
          if [[ $(git log -1 --pretty=%B) == *"#bump"* ]]; then
            echo "Commit contains #bump. Skipping workflow execution."
            exit 78  # This exit code skips the workflow without failing
          else
            echo "Commit does not contain #bump. Proceeding with workflow execution."
          fi
        shell: bash

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT_TOKEN }}
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Upgrade pip & Install Poetry.
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Install dependencies.
        run: |
          poetry install

      - name: Get old version
        run: |
          echo "old_version=$(poetry version -s)" >> $GITHUB_ENV

      - name: Bump version
        run: |
          poetry run bumpver update --${{ env.bump }}

      - name: Get new version
        run: |
          echo "new_version=$(poetry version -s)" >> $GITHUB_ENV
      - name: Set up SSH and Create or Modify File
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: add file.
        run: |
          echo "This is a new line" >> file.txt || echo "File.txt already exists, appending a new line." > file.txt
  
      - name: Commit Files
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "actions@github.com"
          git add *
          git commit -m "#bump version from ${{ env.old_version }} --> ${{ env.new_version }}"
        
      - name: Push Changes via SSH
        run: |
          git push git@github.com:ouhammmourachid/pyxo.git main
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag: env.new_version
        run: |
          gh release create "$tag" \
              --repo="$GITHUB_REPOSITORY" \
              --title="${GITHUB_REPOSITORY#*/} ${tag#v}" \
              --generate-notes
